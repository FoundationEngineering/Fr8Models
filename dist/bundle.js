!function(t){var e={};function s(r){if(e[r])return e[r].exports;var i=e[r]={i:r,l:!1,exports:{}};return t[r].call(i.exports,i,i.exports,s),i.l=!0,i.exports}s.m=t,s.c=e,s.d=function(t,e,r){s.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},s.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},s.t=function(t,e){if(1&e&&(t=s(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(s.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var i in t)s.d(r,i,function(e){return t[e]}.bind(null,i));return r},s.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return s.d(e,"a",e),e},s.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},s.p="",s(s.s=0)}([function(t,e,s){"use strict";s.r(e);class r{constructor(t,e,s){this.id=t,this.username=e,this.companyId=s}}class i{constructor(t){this.pricingRules=t}}class n{constructor(t){this.id="",this.flags="",this.jobType="",this.docketId="",this.orderRefId="",this.deliveryRefId="",this.pickupRefId="",this.iCOSRef=0,this.exportCertNumber="",this.isNoDisp=!1,this.isQuote=!1,this.pickupRefId="",this.shipperName="",this.shipperAddr="",this.consigneeName="",this.consigneeAddr={},this.createdDate="",this.status="",this.serviceType="",this.hirePallets=0,this.nonHirePallets=0,this.lifts=0,this.hireRetn=0,this.goodsType=0,this.reqTempDeg=0,this.actualTempDeg=0,this.unloadFee=0,this.noChg=!1,this.noDisp=!1,this.reqPickupDateTime="",this.actPickupDateTime="",this.reqDeliveryTime="",this.actDeliveryTime="",this.deliveredTo="",this.hasPOD=!1,this.comments="",this.nextDepot="",this.deliveryDepot="",this.currentDepot="",this.shipPayer="",Object.assign(this,t)}}class o{constructor(t,e,s){this.m3=t,this.tonne=e,this.cost=s}}class c{constructor(t,e){this.cost_p_tonne=t,this.cost_p_m3=e}}class u{constructor(t,e){this.id=t,this.type=e}}var a;u.TYPE={RATING_CARD:"type_rating_card",TONNE_RATE:"type_tonne_rate",MASS_RATE:"type_mass_rate",PALLET_RATE:"type_pallet_rate",DRIVER_COST:"type_driver_cost",UPLIFT_COST:"type_uplift_cost",FUEL_ADJUST_FEE:"type_fuel_adjust_fee",PALLET_COST:"type_pallet_cost",MIN_CHARGE:"type_min_charge",FLAT_CHARGE:"type_flat_charge",GST:"type_gst"},function(t){t.TYPE={RATING_CARD:"type_rating_card",TONNE_RATE:"type_tonne_rate",MASS_RATE:"type_mass_rate",PALLET_RATE:"type_pallet_rate",DRIVER_COST:"type_driver_cost",UPLIFT_COST:"type_uplift_cost",FUEL_ADJUST_FEE:"type_fuel_adjust_fee",PALLET_COST:"type_pallet_cost",MIN_CHARGE:"type_min_charge",FLAT_CHARGE:"type_flat_charge",GST:"type_gst"}}(a||(a={}));class h{constructor(t,e){this.majorLocations=t,this.costRatePerTonne=e}}class p extends Error{constructor(t){super(t)}}class _{constructor(t){this.data=t}}class l{constructor(t,e){this.username=t,this.password=e}}class d{constructor(t,e,s){this.username=t,this.password=e,this.companyName=s}}class f{constructor(t,e){this.username=t,this.token=e}}class y{constructor(t,e){this.errorMessage=t,this.user=e}}class T{constructor(t,e){this.error=t,this.message=e}}class R{constructor(t,e,s){this.userId=t,this.companyId=e,this.username=s}}s.d(e,"User",(function(){return r})),s.d(e,"JobDefinition",(function(){return i})),s.d(e,"DispatchRecord",(function(){return n})),s.d(e,"PricingLevel",(function(){return o})),s.d(e,"PricingRateLevel",(function(){return c})),s.d(e,"PriceRule",(function(){return u})),s.d(e,"PriceRuleConst",(function(){return a})),s.d(e,"RatingCard",(function(){return h})),s.d(e,"NotFoundException",(function(){return p})),s.d(e,"DataContainerRequest",(function(){return _})),s.d(e,"LoginRequest",(function(){return l})),s.d(e,"RegisterRequest",(function(){return d})),s.d(e,"LoginResponse",(function(){return f})),s.d(e,"TokenVerificationResponse",(function(){return y})),s.d(e,"ErrorResponse",(function(){return T})),s.d(e,"UserInfoFromToken",(function(){return R}))}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,